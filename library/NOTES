=================================================================
Logtalk - Object oriented extension to Prolog
Release 2.21.2

Copyright (c) 1998-2004 Paulo Moura.  All Rights Reserved.
=================================================================


This folder contains some useful objects, categories, and protocols. 

To load a group of objects, protocols, and categories in this library 
change your Prolog working directory to this folder and then compile 
and load the corresponding loader utility file. Currently, there are 
eight groups of entities defined, each one with a loader and a notes 
file:

	dates
		dates_loader.lgt
		dates.notes

	debugging
		debugging_loader.lgt
		debugging.notes

	dependents
		dependents_loader.lgt
		dependents.notes

	events
		events_loader.lgt
		events.notes

	hierarchies
		hierarchies_loader.lgt
		hierarchies.notes

	metapredicates
		metapredicates_loader.lgt
		metapredicates.notes

	random
		random_loader.lgt
		random.notes

	types
		types_loader.lgt
		types.notes

There is also a file named all_loader.lgt that will load all entities in the 
groups listed above.

To compile and load the loader files type you may use the Logtalk built-in 
predicate logtalk_load/1. For example:

	| ?- logtalk_load(all_loader).

Specific notes about each group of objects, categories, and protocols can be 
found in the corresponding *.notes files.

Some of the files contained in this directory represent work in progress and 
are not loaded by default by any loader utility file.

Some of the code in this library is based on public domain Prolog code, in 
particular, code adopted from the Edinburgh Prolog library. The definition 
of predicate reverse/2 in object list is from Richard O'Keefe and can be found 
in its book "The Craft of Prolog".

By default, compiling any group of entities described above generates a .xml 
documenting file for each compiled entity (object, category, or protocol).
See the xml sub-directory for instructions on how to browse the .xml files 
for on-line reading or how to convert the files to a print-ready format such 
as PDF.

All source files are formatted using four-spaces tabs.
