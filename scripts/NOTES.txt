=================================================================
Logtalk - Object oriented extension to Prolog
Release 2.28.0

Copyright (c) 1998-2006 Paulo Moura.  All Rights Reserved.
=================================================================


This directory contains several scripts used for Logtalk packaging, 
installation, and integration with Prolog compilers. Those with extension 
".sh" are Bourne-compatible shells scripts for MacOS X, Linux, and similar 
systems. Those with extension ".js" are JScript command-line scripts for 
Windows; they require WSH 5.6 or later version to be installed and should 
be run using cscript.exe from a DOS command line shell (you may download 
WSH 5.6 from http://msdn.microsoft.com/downloads/list/webdev.asp)

lgt_install.sh
	shell script for installing Logtalk in a system-wide location for Unix 
	and Unix-like operating systems (must be run from this directory by a 
	user with administration privileges; accepts as an optional argument 
	a prefix for the installation directory, default is /usr/local with
	useful scripts written to /usr/local/bin that should be your path)
lgt_install.js
	Windows 2000/XP JScript script for completing the Logtalk installation by 
	setting the LOGTALKHOME system environment variable and the LOGTALKUSER 
	user environment variable (for the user performing the installation), by 
	creating a new program group named "Logtalk" in the Windows Start Menu, 
	and by adding the directories %LOGTALKHOME%\scripts and %LOGTALKHOME%\xml 
	to the system path environment variable (must be run from this directory 
	by a user with administration privileges after decompressing the Logtalk 
	distribution into its final destination; you must restart your computer 
	after running this script in order to use the items on the "Logtalk"
	program group due to the definition of new system environment variables)

logtalk.spec
	specification file for building Linux RPMs
	(copy the Logtalk tarball to your RPM SOURCES directory and then 
	run the command: rpmbuild -ba --target=noarch-*-linux logtalk.spec)

logtalk.iss
	Inno Setup GUI Windows installer script; you may compile it with Inno 
	Setup 5.1.6 or later version to produce a Windows 2000/XP GUI installer
	(http://www.jrsoftware.org/isinfo.php)

cplgtdirs.sh
cplgtdirs.js
	end-user scripts for copying the Logtalk user-modifiable files and 
	directories to the location pointed by the environment variable 
	LOGTALKUSER (defaults to ~/logtalk on Unix-like operating-systems 
	and to My Documents\logtalk on Windows when the variable is not 
	defined); must be run by the end-user in order to ensure proper 
	permissions for the copied files

cleandist.sh
	script for cleaning a Logtalk distribution in preparation for packaging

debian
	directory containing support files for building a Debian package
	(work in progress; not yet functional)


The following scripts allow easy integration of Logtalk with selected Prolog 
compilers; they must be run by a user with administration privileges:

make_ciaolgt.sh
	makes a shell script named "ciaolgt" for running Logtalk with CIAO Prolog
	(the first run of the "ciaolgt" script must be made as root or using sudo)
make_ciaolgt.js
	makes a Windows shortcut named "Logtalk - CIAO" for running Logtalk with 
	CIAO 1.10 (the first call to the shortcut must be made by a user with 
	administrative rights)

make_eclipselgt.sh
	makes a shell script named "eclipselgt" for running Logtalk with ECLiPSe
make_eclipselgt.js
	makes a Windows shortcut named "Logtalk - ECLiPSe" for running Logtalk 
	with ECLiPSe 5.8 (if you are using a different version, you must edit 
	the reference to the registry key in the script; if you prefer to use
	TkEclipse, open the %LOGTALKHOME%\bin\logtalke_eclipse.pl file with it)

make_gplgt.sh
	makes a shell script named "gplgt" for running Logtalk with GNU Prolog (this 
	script is adequate for development purposes but does not provide the best 
	possible performance for running Logtalk with this Prolog compiler; for 
	optimal performance, see the configs/NOTES file)
make_gplgt.js
	makes a Windows shortcut named "Logtalk - GNU Prolog" for running Logtalk 
	with GNU Prolog (this script is adequate for development purposes but does 
	not provide the best possible performance for running Logtalk with this 
	Prolog compiler; for optimal performance, see the configs/NOTES file)

make_plclgt.sh
	makes a shell script named "plclgt" for running Logtalk with K-Prolog	
make_plclgt.js
	makes a Windows shortcut named "Logtalk - K-Prolog" for running Logtalk 
	with K-Prolog

make_qplgt.sh
	makes a shell script named "qplgt" for running Logtalk with Qu-Prolog 
	(based on script code contributed by Peter Robinson); this script does 
	not read at runtime the config and the libpaths files: you will need to 
	run this script again if you modify these files

make_sicstuslgt.sh
	makes a shell script named "sicstuslgt" for running Logtalk with SICStus 
	Prolog
make_sicstuslgt.js
	makes a Windows shortcut named "Logtalk - SICStus Prolog" for running 
	Logtalk with SICStus Prolog 3.12 or 4.0 (if you are using a different 
	version, you must edit the reference to the registry key in the script)

make_swilgt.sh
	makes a shell script named "swilgt" for running Logtalk with SWI-Prolog;
	the script assumes that the SWI-Prolog executable is named "swipl" on 
	MacOS X and named "pl" on Linux and other similar operating systems;
	with multi-threading support turned on, you will get an warmless message
	when halting the system regarding threads that wouldn't die: you can 
	supress the message by using "% swilgt 2> /dev/null"
make_swilgt.js
	makes a Windows shortcut named "Logtalk - SWI-Prolog" for running Logtalk 
	with SWI-Prolog

make_yaplgt.sh
	makes a shell script named "yaplgt" for running Logtalk with YAP
make_yaplgt.js
	makes a Windows shortcut named "Logtalk - YAP" for running Logtalk with 
	YAP (assumes that the Yap folder is installed in C:\Program Files; edit 
	the path to the "yap.exe" executable in the script if necessary)

make_xsblgt.sh
	makes a shell script named "xsblgt" for running Logtalk with XSB (the 
	first run of the "xsblgt" script must be made as root or using sudo)
make_xsblgt.js
	makes a Windows shortcut named "Logtalk - XSB" for running Logtalk with 
	XSB (the first call to the shortcut must be made by a user with 
	administrative rights; assumes that XSB is installed in C:\Program Files, 
	edit the path to the "xsb.exe" executable in the script if necessary; 
	each user will need to edit the file libpaths/libpaths_no_env_var.pl in 
	order to replace all occurrences of the LOGTALKUSER environment variable 
	with its value)

makeall_lgt.sh
	simple shell script for running all the make_*lgt.sh shell scripts in 
	sequence (except the make_qplgt.sh as this script implies modifications to
	the Logtalk files which are not necessary for the other Prolog compilers);
	note that this script will not print any of the special instructions, 
	remarks, or error messages that you may get when running the make_*lgt.sh 
	shell scripts individually
makeall_lgt.js
	simple shell script for running all the make_*lgt.js shell scripts in 
	sequence; note that this script will not print any of the special 
	instructions, remarks, or error messages that you may get when running 
	the make_*lgt.js shell scripts individually

These scripts require the environment variable LOGTALKHOME (pointing to the 
Logtalk installation directory) to be defined. The *.sh shell scripts 
accept as an optional argument a prefix for the location of a link to the 
scripts (default is /usr/local, creating the links in /usr/local/bin). The 
*.js scripts add the created shortcuts to the "Logtalk" program group (which 
is accessed from the Windows Start Menu).

Please note that the environment variables LOGTALKHOME and LOGTALKUSER must 
be defined in order to run the *lgt scripts that are created by the shell 
scripts above or the Windows shortcuts (see the INSTALL file for details on 
setting the variables).

When Logtalk is manually installed from sources, the shell scripts might not 
have the executable permission bit set. In that case it will be necessary to 
first run the command "chmod a+x *.sh" on the "scripts" and "xml" directories.

Depending on the size and complexity of your Logtalk applications, you may 
need to change the integration scripts in order to allocate more memory to
Prolog compilers. Please consult the documentation on the Prolog compilers 
you intend to use for details.
