================================================================
Logtalk - Open source object-oriented logic programming language
Release 2.30.7

Copyright (c) 1998-2007 Paulo Moura.  All Rights Reserved.
================================================================


This directory contains Prolog integration shell scripts and auxiliary 
Prolog files.

On POSIX systems, the Logtalk installers make the following integration 
scripts available from the command-line (you may need to adjust your 
system path):

	bplgt		B-Prolog integration script
	ciaolgt		Ciao Prolog integration script
	cxlgt		CxProlog integration script
	eclipselgt	ECLiPSe integration script
	gplgt		GNU Prolog integration script
	plclgt		K-Prolog integration script
	qplgt		Qu-Prolog integration script
	sicstuslgt	SICStus Prolog integration script
	swilgt		SWI-Prolog integration script
	xsblgt		XSB integration script (single-threaded)
	xsbmtlgt	XSB integration script (multi-threaded)
	yaplgt		YAP integration script

On Windows systems, the Logtalk installer makes the Prolog integration 
shortcuts available from the "Start Menu/Programs/Logtalk" menu.

The first run of the B-Prolog, Ciao, and XSB integration scripts must be 
made by an user with administrative rights (on POSIX systems, run them 
once as root or using sudo; in Windows systems run them once from an 
administrative account).

The GNU Prolog integration script provides adequate performance for 
development. For production environments, improved performance may be 
achieved by generating a new GNU-Prolog top-level that includes Logtalk.

The SWI-Prolog integration script assumes XPCE is installed. If that's 
not the case, comment out the loading of the file "xpcehook.pl" on the 
"integration/logtalk_swi.pl" file.

Other Prolog compilers require manual steps for integration with Logtalk.
See the "configs/NOTES.txt" file for details.

The environment variables LOGTALKHOME and LOGTALKUSER should be defined 
in order to run the integration scripts (see the "INSTALL.txt" file for 
details on setting the variables).

Note that the integration scripts and shortcuts may fail if you use non-
standard locations for your Prolog compilers.

Depending on the size and complexity of your Logtalk applications, you 
may need to change the integration scripts in order to allocate more 
memory to the back-end Prolog compilers. Please consult the documentation 
on the Prolog compilers you intend to use for details.

All the scripts accept command-line options, which are passed straight to 
the back-end Prolog compiler. For example (on a POSIX operating-system, 
using SWI-Prolog as the back-end compiler):

	% swilgt -g "write('Hello world!'), nl"

However, keep in mind that the integration scripts already use the back-end 
Prolog command-line option that allows a initialization file to be loaded 
in order to bootstrap Logtalk. See the scripts files for details.
