=================================================================
Logtalk - Object oriented extension to Prolog
Release 2.28.3

Copyright (c) 1998-2006 Paulo Moura.  All Rights Reserved.
=================================================================


% start by loading the loading the example:

| ?- logtalk_load(atomic(loader)).
...


% send three asynchronous messages whose corresponding methods perform output operations:

| ?- threaded_ignore(nasty1::io(alpha)), threaded_ignore(nasty1::io(digit)), threaded_ignore(nasty1::io(alpha)).

a0ab1bc2c3ddefef45gg6hh7ii8jkjk9
llmmnnopopqqrrsstztzyyxxwwuv
uv

Yes


% send three asynchronous messages whose corresponding methods perform database updates
% (this may or may not work, most likely will throw an exception):

| ?- threaded_ignore(nasty1::update_db(_)), threaded_ignore(nasty1::update_db(_)), threaded_ignore(nasty1::update_db(_)).

No


% the best solution is to declare predicates that need to be thread syncronized as "atomic",
% as exemplified in object "nasty2":

| ?- nasty2::(io(alpha), io(digit), io(alpha)).

abcdefghijklmnopqrstzyxwuv
0123456789
abcdefghijklmnopqrstzyxwuv

Yes


| ?- nasty2::(update_db(X), update_db(Y), update_db(Z)).

X = 1
Y = 2
Z = 3 

Yes
