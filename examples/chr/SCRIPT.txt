================================================================
Logtalk - Open source object-oriented logic programming language
Release 2.43.1

Copyright (c) 1998-2011 Paulo Moura.        All Rights Reserved.
Logtalk is free software.  You can redistribute it and/or modify
it under the terms of the "Artistic License 2.0" as published by 
The Perl Foundation. Consult the "LICENSE.txt" file for details.
================================================================


% start by loading the example and the required library files:

| ?- logtalk_load(chr(loader)).
...


% simple finite domain constraint solver:

| ?- dom::dom(A, [1,2,3]), dom::dom(A, [3,4,5]).
A = 3 .


% Slim Abdennadher and Henning Christiansen family relations program:

?- family::start, family::sibling(peter,mary).
family::person(paul,male)
family::person(jane,female)
family::person(peter,male)
family::person(mary,female)
family::person(john,male)
family::father(john,peter)
family::father(john,mary)
family::mother(jane,mary)
family::diff(peter,mary)
true .

?- family::start, family::sibling(paul,mary).
false.

?- family::father(X,Y), family::mother(X,Y).
false.


% computing Fibonacci numbers:

| ?- fib::fib(5, M).
fib::fib(1,1)
fib::fib(0,1)
fib::fib(2,2)
fib::fib(3,3)
fib::fib(4,5)
fib::fib(5,8)
M = 8 .


%  Bart Demoen and Tom Schrijvers version of the fibonacci program:

| ?- fibonacci::fibonacci(5, M).
fibonacci::fibonacci(0,1)
fibonacci::fibonacci(1,1)
fibonacci::fibonacci(2,2)
fibonacci::fibonacci(3,3)
fibonacci::fibonacci(4,5)
fibonacci::fibonacci(5,8)
M = 8 .


% finding the greatest common divisor between two positive integers:

| ?- gcd::gcd(2), gcd::gcd(3).
gcd::gcd(1)
true .

| ?- X is 37*11*11*7*3, Y is 11*7*5*3, Z is 37*11*5, gcd::gcd(X), gcd::gcd(Y), gcd::gcd(Z).
gcd::gcd(11)
X = 94017,
Y = 1155,
Z = 2035 .


% using a simple constraint solver for inequalities between variables:

| ?- leq::leq(X,Y), leq::leq(Y,Z).
leq::leq(_G11112,_G11119)
leq::leq(_G11113,_G11119)
leq::leq(_G11112,_G11113)
true .


% using an implementation of the Sieve of Eratosthenes to compute primes:

| ?- primes::candidate(29).
primes::prime(2)
primes::prime(3)
primes::prime(5)
primes::prime(7)
primes::prime(11)
primes::prime(13)
primes::prime(17)
primes::prime(19)
primes::prime(23)
primes::prime(29)
true .


