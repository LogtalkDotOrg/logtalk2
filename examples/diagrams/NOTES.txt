================================================================
Logtalk - Open source object-oriented logic programming language
Release 2.42.2

Copyright (c) 1998-2011 Paulo Moura.        All Rights Reserved.
Logtalk is free software.  You can redistribute it and/or modify
it under the terms of the "Artistic License 2.0" as published by 
The Perl Foundation. Consult the "LICENSE.txt" file for details.
================================================================


To load this example and for sample queries, please see the SCRIPT file.

This example illustrates how to generate entity diagrams for source files
and for libraries of source files using the Logtalk reflection features to
collect the relevant information and the DOT language for representing the
diagrams.

The diagrams .dot files are created on the current directory by default.
These files can be easily converted into a printable format such as PDF
or Postscript. For example, using the dot command-line executable we can
simply type:

	dot -Tpdf diagram.dot > diagram.pdf 

When generating diagrams for libraries, is possible to split a diagram with
several disconnected entity graphs using the ccomps command-line executable.
For example:

	ccomps -x -o subdiagram.dot diagram.dot

For more information on the DOT language and related tools see:

	http://www.graphviz.org/

When using Windows, there are know issues with some Prolog compilers due
to the internal representation of paths. If you encounter problems with a
specific back-end Prolog compiler, try to use another supported back-end
Prolog compiler when generating diagrams.

For printing large diagrams, you will need to either use a tool to slice
the diagram in page-sized pieces or, preferably, use software capable of
tiled printing (e.g. Adobe Reader).

A set of options are available to specify the details to include in the
generated diagrams:

date(Boolean)
	print/omit current date (true or false; default is true)
library_paths(Boolean)
	print/omit library paths (true or false; default is true)
file_names(Boolean)
	print/omit source file names (true or false; default is true)
interface(Boolean)
	print/omit public predicates (true or false; default is true)
output_path(OutputPath)
	directory for the .dot files (an atom; default is '.')
exclude_files(Files)
	list of source files (without the .lgt extension) to exclude (default is [])
exclude_paths(Paths)
	list of relative paths to exclude (default is [])
exclude_entities(Entities)
	list of entities to exclude (default is [])
