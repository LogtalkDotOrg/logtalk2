================================================================
Logtalk - Open source object-oriented logic programming language
Release 2.42.4

Copyright (c) 1998-2011 Paulo Moura.        All Rights Reserved.
Logtalk is free software.  You can redistribute it and/or modify
it under the terms of the "Artistic License 2.0" as published by 
The Perl Foundation. Consult the "LICENSE.txt" file for details.
================================================================


To load this example and for sample queries, please see the SCRIPT.txt
file.

This an experimental example of using attributed variables within Logtalk
objects and categories. It requires the use of a back-end Prolog compiler
with support for attributed variables. Tested with B-Prolog, SWI-Prolog,
XSB, and YAP. The individual examples are adaptations of code found on the
SWI-Prolog documentation.

When using SWI-Prolog or YAP, the "attvars_hook" hook object works by
creating a shadow module (with the same name as the object) containing
the attribute_goals//1 and attr_unify_hook/2 hooks that are required by
the attributed variables implementation. These hooks are compiled as module
multifile predicates in order to avoid spurious compiler warning messages
(note that the hook clause bodies are compiled within the context of the
container object).

When using XSB, the "attvars_hook" hook object works by generating the
install_verify_attribute_handler/4 and install_attribute_portray_hook/3
XSB directives, invoked using Logtalk-compiled arguments. These directives
allows the use of common code for SWI-Prolog, XSB, and YAP. A portability
caveat, however: in XSB, the predicate get_attr/3 throws an exception if
the first argument is not a variable while SWI-Prolog and XSB simply fail
in this case.

When using B-Prolog, the attribute_goals//1 hook grammar rule is discarded.

Known caveats:
1. Is not possible to use the parameter values in the case of parametric
objects or parametric categories within the attributed variables hook
predicates.
2. Calling the attributed variables built-in predicates (e.g. get_attr/3,
put_attr/3, and del_attr/2) from outside the object (or category) doesn't
work.
