================================================================
Logtalk - Open source object-oriented logic programming language
Release 2.32.2

Copyright (c) 1998-2008 Paulo Moura. All Rights Reserved.

Logtalk is free software. You can redistribute it and/or modify
it under the terms of the Artistic License 2.0 as published by 
the The Perl Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
Artistic License 2.0 for more details. A copy of the license is 
provided in the "LICENSE.txt" file.
================================================================


% start by loading the example:

| ?- logtalk_load(inheritance(loader)).
...


% parent interface

| ?- parent::interface.

public/0 - public
protected/0 - protected
private/0 - private

yes


% prototype1 extends public::parent

| ?- prototype1::interface.

public/0 - public
protected/0 - protected

yes


% prototype2 extends protected::parent

| ?- prototype2::interface.

public/0 - protected
protected/0 - protected

yes


% prototype3 extends private::parent

| ?- prototype3::interface.

public/0 - private
protected/0 - private

yes


% descendant1 extends public::prototype1

| ?- descendant1::interface.

public/0 - public
protected/0 - protected

yes


% descendant2 extends public::prototype2

| ?- descendant2::interface.

public/0 - protected
protected/0 - protected

yes


% descendant3 extends public::prototype3

| ?- descendant3::interface.

yes


% object (root of the inheritance graph) interface

| ?- root::interface.

public/0 - public
protected/0 - protected
private/0 - private

yes


% instance1 instantiates subclass1 that specializes public::root

| ?- instance1::interface.

public/0 - public
protected/0 - protected

yes


% instance2 instantiates subclass2 that specializes protected::root

| ?- instance2::interface.

public/0 - protected
protected/0 - protected

yes


% instance3 instantiates subclass3 that specializes private::root

| ?- instance3::interface.

public/0 - private
protected/0 - private

yes
